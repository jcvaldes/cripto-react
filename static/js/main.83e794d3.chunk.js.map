{"version":3,"sources":["cryptomonedas.png","hooks/useMoneda.js","hooks/useCriptomoneda.js","components/Error.js","components/Formulario.js","components/Cotizacion,.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Label","styled","label","Select","select","useMoneda","stateInicial","opciones","useState","state","updateState","onChange","e","target","value","map","opcion","codigo","nombre","useCriptomoneda","CoinInfo","Name","FullName","Id","MensajeError","p","Error","mensaje","Boton","input","Formulario","saveMoneda","saveCriptomoneda","listaCripto","saveCripto","error","saveError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","consultarAPI","a","axios","get","resultado","data","Data","onSubmit","preventDefault","type","ResultadoDiv","div","Info","Precio","Cotizacion","Object","keys","length","console","log","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","class","Contenedor","Imagen","img","Heading","h1","App","saveResultado","cargando","saveCargando","cotizarCriptomoneda","url","setTimeout","DISPLAY","src","imagen","alt","showInfoCripto","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83e794d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React, { useState } from \"react\";\nimport styled from '@emotion/styled';\n\nconst Label = styled.label`\n    font-family: 'Bebas Neue', cursive;\n    color: #FFF;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 2.4rem;\n    margin-top: 2rem;\n    display: block;\n`\nconst Select = styled.select`\n    width: 100%;\n    display: block;\n    padding: 1rem;\n    -webkit-appearance: none;\n    border-radius: 10px;\n    border: none;\n    outline: none;\n    font-size: 1rem;\n`\nconst useMoneda = (label, stateInicial, opciones) => {\n  // State de nuestro custom hook\n  const [state, updateState] = useState(stateInicial);\n  const Seleccionar = () => (\n    <>\n      <Label>{label}</Label>\n      <Select onChange={(e) => updateState(e.target.value)} value={state}>\n        <option value=\"\">- Seleccione -</option>\n        {opciones.map((opcion) => (\n          <option key={opcion.codigo} value={opcion.codigo}>{opcion.nombre}</option>\n        ))}\n      </Select>\n    </>\n  );\n  // retornar el state, updateState y el componente\n  return [state, Seleccionar, updateState];\n};\n\nexport default useMoneda;\n","import React, { useState } from \"react\";\nimport styled from '@emotion/styled';\n\nconst Label = styled.label`\n    font-family: 'Bebas Neue', cursive;\n    color: #FFF;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 2.4rem;\n    margin-top: 2rem;\n    display: block;\n`\nconst Select = styled.select`\n    width: 100%;\n    display: block;\n    padding: 1rem;\n    -webkit-appearance: none;\n    border-radius: 10px;\n    border: none;\n    outline: none;\n    font-size: 1rem;\n`\nconst useCriptomoneda = (label, stateInicial, opciones) => {\n  // State de nuestro custom hook\n  const [state, updateState] = useState(stateInicial);\n  const SelectCripto = () => (\n    <>\n      <Label>{label}</Label>\n      <Select onChange={(e) => updateState(e.target.value)} value={state}>\n        <option value=\"\">- Seleccione -</option>\n        {opciones.map((opcion) => (\n          <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>{opcion.CoinInfo.FullName } ({ opcion.CoinInfo.Name}) </option>\n        ))}\n      </Select>\n    </>\n  );\n  // retornar el state, updateState y el componente\n  return [state, SelectCripto, updateState];\n};\n\nexport default useCriptomoneda;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst MensajeError = styled.p`\n  background-color: #b7322c;\n  padding: 1rem;\n  color: #fff;\n  font-size: 30px;\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  font-family: \"Bebas Neue\", cursive;\n`;\nconst Error = ({ mensaje }) => {\n  return <MensajeError>{mensaje}</MensajeError>;\n};\n\nexport default Error;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport useMoneda from \"../hooks/useMoneda\";\nimport useCriptomoneda from \"../hooks/useCriptomoneda\";\nimport axios from \"axios\";\nimport Error from \"./Error\";\n\nconst Boton = styled.input`\n  margin-top: 20px;\n  font-weight: bold;\n  font-size: 20px;\n  padding: 10px;\n  background-color: #66a2fe;\n  border: none;\n  width: 100%;\n  border-radius: 10px;\n  color: #fff;\n  transition: background-color 0.3s ease;\n  &:hover {\n    background-color: #326ac0;\n    cursor: pointer;\n  }\n`;\nconst Formulario = ({ saveMoneda, saveCriptomoneda }) => {\n  // state del listado de criptomonedas\n  const [listaCripto, saveCripto] = useState([]);\n  const [error, saveError] = useState(false);\n  const MONEDAS = [\n    { codigo: \"USD\", nombre: \"Dolar de Estados Unidos\" },\n    { codigo: \"MXN\", nombre: \"Peso Mexicano\" },\n    { codigo: \"EUR\", nombre: \"Euro\" },\n    { codigo: \"GBP\", nombre: \"Libra Esterlina\" },\n    { codigo: \"ARS\", nombre: \"Peso Argentino\" },\n  ];\n  // utilizar useMoneda\n  const [moneda, SelectMonedas] = useMoneda(\"Elige tu moneda\", \"\", MONEDAS);\n  // utilizar useCriptomoneda\n  const [criptomoneda, SelectCripto] = useCriptomoneda(\n    \"Elige tu criptomoneda\",\n    \"\",\n    listaCripto\n  );\n\n  // Ejecutar llamado a la API\n  useEffect(() => {\n    const consultarAPI = async () => {\n      const url =\n        \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\";\n      const resultado = await axios.get(url);\n      //   console.log(resultado.data.Data);\n      saveCripto(resultado.data.Data);\n    };\n    consultarAPI();\n  }, []);\n\n  // cuando el usuario hace submit\n  const cotizarMoneda = (e) => {\n    e.preventDefault();\n\n    // validar que ambos campos esten llenos\n    if (moneda === \"\" || criptomoneda === \"\") {\n      saveError(true);\n      return;\n    }\n    // pasar la informacion al componente principal\n    saveError(false);\n    \n    saveMoneda(moneda);\n    saveCriptomoneda(criptomoneda);\n  };\n  return (\n    <form onSubmit={cotizarMoneda}>\n      {error ? <Error mensaje=\"todos los campos son obligatorios\" /> : null}\n      <SelectMonedas />\n      <SelectCripto />\n      <Boton type=\"submit\" value=\"Calcular\" />\n    </form>\n  );\n};\n\nexport default Formulario;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst ResultadoDiv = styled.div`\n  color: #fff;\n  font-family: Arial, Helvetica, sans-serif;\n`\nconst Info = styled.p`\n  font-size: 18px;\n  span {\n    font-weight: bold;\n  }\n`;\n\nconst Precio = styled.p`\n  font-size: 30px;\n  span {\n    font-weight: bold;\n  }\n`;\n\nconst Cotizacion = ({ resultado }) => {\n  if (Object.keys(resultado).length === 0) return null;\n  console.log(resultado);\n  return (\n    <ResultadoDiv>\n      <Precio>\n        El precio es: <span>{resultado.PRICE}</span>\n      </Precio>\n      <Info>\n        El precio más alto del día: <span>{resultado.HIGHDAY}</span>\n      </Info>\n      <Info>\n        El precio más bajo del día: <span>{resultado.LOWDAY}</span>\n      </Info>\n      <Info>\n        Variación últimas 24 horas: <span>{resultado.CHANGEPCT24HOUR}</span>\n      </Info>\n      <Info>\n        Útima actualización: <span>{resultado.LASTUPDATE}</span>\n      </Info>\n    </ResultadoDiv>\n  );\n};\n\nexport default Cotizacion;\n","import React from \"react\";\nimport './Spinner.css'\nconst Spinner = () => {\n  return (\n    <div class=\"sk-chase\">\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport imagen from \"./cryptomonedas.png\";\nimport Formulario from \"./components/Formulario\";\nimport axios from \"axios\";\nimport Cotizacion from \"./components/Cotizacion,\";\nimport Spinner from \"./components/Spinner\";\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\nconst Heading = styled.h1`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n  &::after {\n    content: \"\";\n    width: 100px;\n    height: 6px;\n    background-color: #66a2fe;\n    display: block;\n  }\n`;\nfunction App() {\n  // para la moneda\n  const [moneda, saveMoneda] = useState(\"\");\n  // para la cryptomoneda\n  const [criptomoneda, saveCriptomoneda] = useState(\"\");\n  // para obtener la cotizacion\n  const [resultado, saveResultado] = useState({});\n  // para el spinner\n  const [cargando, saveCargando] = useState(false);\n\n  const showInfoCripto = (cargando) => cargando ? <Spinner /> : <Cotizacion resultado={resultado} />;\n  useEffect(() => {\n    // evitamos la ejecución inecesaria por primera vez\n    // console.log('Cotizando...')\n\n    // consultar la api para obtener la cotizacion\n    const cotizarCriptomoneda = async () => {\n      if (moneda === \"\") return;\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n      const resultado = await axios.get(url);\n      saveCargando(true);\n      setTimeout(() => {\n        // cambiar el estado de cargando\n        saveCargando(false);\n        console.log(resultado.data.DISPLAY[criptomoneda][moneda]);\n        // guardar cotizacion\n        saveResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      }, 1000);\n    };\n    cotizarCriptomoneda();\n  }, [criptomoneda, moneda]);\n  return (\n    <Contenedor>\n      <div>\n        <Imagen src={imagen} alt=\"imagen cripto\" />\n      </div>\n      <div>\n        <Heading>Cotiza Criptomonedas al instante</Heading>\n        <Formulario\n          saveMoneda={saveMoneda}\n          saveCriptomoneda={saveCriptomoneda}\n        />\n        {showInfoCripto(cargando)}\n        \n      </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}